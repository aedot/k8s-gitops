---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: multus
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      multus:
        labels:
          app.kubernetes.io/name: multus
          app.kubernetes.io/instance: multus
          app.kubernetes.io/controller: multus
        type: daemonset
        pod:
          hostNetwork: true
        initContainers:
          cni-plugins:
            image:
              repository: ghcr.io/home-operations/cni-plugins
              tag: 1.7.1@sha256:4bd4e77e3fbc21dd63b9826a011cead1333b6975efa4d1d2631ca932bfd27371
        containers:
          multus:
            image:
              repository: ghcr.io/k8snetworkplumbingwg/multus-cni
              tag: v4.2.1@sha256:6bebbda31416810875367484b8125026b2816885b79c89c2df863a6ed77dd4a6
            command:
              - /thin_entrypoint
            args:
              - --cleanup-config-on-exit=true
              - --multus-log-level=debug
            resources:
              requests:
                cpu: "10m"
              limits:
                memory: "512Mi"
            securityContext:
              privileged: true
    persistence:
      etc-cni-net-d:
        type: hostPath
        hostPath: /etc/cni/net.d
        globalMounts:
          - path: /host/etc/cni/net.d
      opt-cni-bin:
        type: hostPath
        hostPath: /opt/cni/bin
        globalMounts:
          - path: /host/opt/cni/bin

    rbac:
      roles:
        multus:
          type: ClusterRole
          rules:
            - apiGroups: ["k8s.cni.cncf.io"]
              resources: ["*"]
              verbs: ["*"]
            - apiGroups: [""]
              resources: ["pods", "pods/status"]
              verbs: ["get", "update"]
            - apiGroups: ["", "events.k8s.io"]
              resources: ["events"]
              verbs: ["create", "patch", "update"]
      bindings:
        multus:
          type: ClusterRoleBinding
          roleRef:
            identifier: multus
          subjects:
            - identifier: multus
    serviceAccount:
      multus: {}
