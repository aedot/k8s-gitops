---
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: sparkyfitness
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: akeyless
  target:
    name: sparkyfitness-secret
    template:
      engineVersion: v2
      data:
        # Database Init
        INIT_POSTGRES_HOST: &dbHost postgres-rw.dbms.svc.cluster.local
        INIT_POSTGRES_DBNAME: &dbName mealie
        INIT_POSTGRES_USER: &dbUser "{{ .SPARKYFITNESS_POSTGRES_USER }}"
        INIT_POSTGRES_PASS: &dbPass "{{ .SPARKYFITNESS_POSTGRES_PASSWORD }}"
        INIT_POSTGRES_SUPER_USER: "{{ .POSTGRES_SUPER_USER }}"
        INIT_POSTGRES_SUPER_PASS: "{{ .POSTGRES_SUPER_PASS }}"

        # Application Database
        SPARKY_FITNESS_DB_NAME: *dbName
        SPARKY_FITNESS_DB_USER: *dbUser
        SPARKY_FITNESS_DB_PASSWORD: *dbPass
        SPARKY_FITNESS_DB_HOST: *dbHost
        SPARKY_FITNESS_DB_PORT: "5432"

        # Security Configuration
        SPARKY_FITNESS_API_ENCRYPTION_KEY: "{{ .SPARKY_FITNESS_API_ENCRYPTION_KEY }}"
        JWT_SECRET: "{{ .JWT_SECRET }}"

        # Applicattion Settings
        SPARKY_FITNESS_ADMIN_EMAIL: "{{ .SPARKY_FITNESS_ADMIN_EMAIL }}"
        SPARKY_FITNESS_FORCE_EMAIL_LOGIN: "true"

  dataFrom:
    - extract:
        key: /sparkyfitness
    - extract:
        key: /cloudnative-pg


# Example JSON structure to add to Akeyless at path /sparkyfitness:
# {
#   "SPARKY_FITNESS_API_ENCRYPTION_KEY": "your-64-character-hex-encryption-key-here",
#   "JWT_SECRET": "your-secure-jwt-secret-here",
#   "SPARKY_FITNESS_DISABLE_SIGNUP": "false",
#   "SPARKY_FITNESS_ADMIN_EMAIL": "admin@example.com"
# }
#
# Note: Database credentials are pulled from /cloudnativepg:
# - POSTGRES_GENERIC_APP_PASSWORD (used for app database password)
# - POSTGRES_SUPER_PASS (used for database initialization)
