---
log:
  level: info

authentication_backend:
  ldap:
    address: ldap://lldap.security.svc.cluster.local:5389
    implementation: custom
    timeout: 5 seconds
    start_tls: false
    base_dn: dc=home,dc=arpa
    additional_users_dn: ou=people
    users_filter: (&({username_attribute}={input})(objectClass=person))
    additional_groups_dn: ou=groups
    groups_filter: (member={dn})
    group_search_mode: filter
    user: uid=authy,ou=people,dc=home,dc=arpa
    attributes:
      username: uid
      display_name: displayName
      mail: mail
      group_name: cn
  password_reset:
    disable: true
  refresh_interval: 1m

regulation:
  max_retries: 3
  find_time: 1h
  ban_time: 1d

session:
  name: authelia-home-ops
  inactivity: 3d
  expiration: 7d
  remember_me: 6M
  cookies:
    - name: authelia_session
      domain: {{ env "SECRET_DOMAIN" }}
      authelia_url: https://auth.{{ env "SECRET_DOMAIN" }}
      default_redirection_url: https://{{ env "SECRET_DOMAIN" }}
  # redis:
  #   host: dragonfly.dbms.svc.cluster.local

access_control:
  default_policy: 'two_factor'
  networks:
    - name: internal
      networks:
        - 10.0.0.0/8
        - 172.16.0.0/12
        - 192.168.0.0/16
  rules: []

notifier:
  disable_startup_check: false
  smtp:
    subject: '[Authelia] {title}'
    username: '{{ env "AUTHELIA_NOTIFIER_SMTP_USERNAME" }}'
    password: '{{ env "AUTHELIA_NOTIFIER_SMTP_PASSWORD" }}'
    sender: '{{ env "AUTHELIA_NOTIFIER_SMTP_SENDER" }}'
    startup_check_address: '{{ env "AUTHELIA_NOTIFIER_SMTP_STARTUP_CHECK_ADDRESS" }}'
    identifier: 'localhost'
    disable_require_tls: true
    disable_html_emails: false

identity_validation:
  reset_password:
    jwt_secret: '{{ env "JWT_SECRET" }}'

default_2fa_method:
  totp

duo_api:
  disable: true

identity_providers:
  oidc:
    cors:
      endpoints:
        - authorization
        - token
        - revocation
        - introspection
        - pushed-authorization-request
        - userinfo
      allowed_origins_from_client_redirect_uris: true
    jwks:
      - key_id: default
        key: {{ env "JWKS_KEY" | mindent 10 "|" | msquote }}
    clients:
      - client_name: Grafana
        client_id: Grafana
        client_secret: '{{ env "GRAFANA_OAUTH_CLIENT_SECRET" }}'
        public: false
        authorization_policy: two_factor
        require_pkce: true
        pre_configured_consent_duration: 1y
        scopes: [openid, profile, groups, email]
        redirect_uris:
          - https://grafana.{{ env "SECRET_DOMAIN" }}/login/generic_oauth
        userinfo_signed_response_alg: none
        token_endpoint_auth_method: client_secret_basic

      - client_name: pgAdmin
        client_id: pgadmin
        client_secret: {{ env "PGADMIN_OAUTH_CLIENT_SECRET" }}
        public: false
        authorization_policy: two_factor
        scopes: [openid, profile, email]
        redirect_uris:
          - https://pgadmin.{{ env "SECRET_DOMAIN" }}/oauth2/authorize
        userinfo_signed_response_alg: none
        token_endpoint_auth_method: client_secret_basic

      - client_name: Lubelog
        client_id: Lubelog
        client_secret: {{ env "LUBELOG_OAUTH_CLIENT_SECRET" }}
        public: false
        authorization_policy: one_factor
        require_pkce: true
        pre_configured_consent_duration: 1y
        scopes: [openid, profile, email]
        redirect_uris:
          - https://lubelog.{{ env "SECRET_DOMAIN" }}/Login/RemoteAuth
        userinfo_signed_response_alg: none
        token_endpoint_auth_method: client_secret_post

      - client_id: mealie
        client_name: Mealie
        client_secret: {{ env "MEALIE_OAUTH_CLIENT_SECRET" }}
        public: false
        authorization_policy: two_factor
        require_pkce: true
        pkce_challenge_method: S256
        scopes: [openid, profile, email]
        redirect_uris:
          - https://mealie.{{ env "SECRET_DOMAIN" }}/login
        userinfo_signed_response_alg: none
