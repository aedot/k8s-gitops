---
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: &app cloudnative-pg
  namespace: &namespace dbms
spec:
  targetNamespace: *namespace
  commonMetadata:
    labels:
      app.kubernetes.io/name: *app
  interval: 30m
  timeout: 5m
  path: "./kubernetes/apps/dbms/cloudnative-pg/app"
  prune: true
  sourceRef:
    kind: GitRepository
    name: flux-system
    namespace: flux-system
  wait: true
  postBuild:
    substituteFrom:
      - name: cluster-secrets
        kind: Secret
---
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: &app cloudnative-pg-barman-cloud
  namespace: &namespace dbms
spec:
  commonMetadata:
    labels:
      app.kubernetes.io/name: *app
  dependsOn:
    - name: cert-manager
      namespace: cert-manager
    - name: cloudnative-pg
      namespace: *namespace
  interval: 1h
  path: ./kubernetes/apps/dbms/cloudnative-pg/barman-cloud
  postBuild:
    substituteFrom:
      - name: cluster-secrets
        kind: Secret
    substitute:
      # renovate: datasource=docker depName=ghcr.io/cloudnative-pg/plugin-barman-cloud-sidecar
      SIDECAR_IMAGE_VERSION: v0.5.0
  prune: true
  retryInterval: 2m
  sourceRef:
    kind: GitRepository
    name: flux-system
    namespace: flux-system
  targetNamespace: *namespace
  timeout: 5m
  wait: true
---
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: &app cloudnative-pg-cluster
  namespace: &namespace dbms
spec:
  targetNamespace: *namespace
  commonMetadata:
    labels:
      app.kubernetes.io/name: *app
  interval: 1h
  timeout: 5m
  path: "./kubernetes/apps/dbms/cloudnative-pg/cluster"
  prune: true
  sourceRef:
    kind: GitRepository
    name: flux-system
    namespace: flux-system
  wait: true
  dependsOn:
    - name: cloudnative-pg
      namespace: *namespace
    - name: cloudnative-pg-barman-cloud
      namespace: *namespace
    - name: longhorn
      namespace: longhorn-system
    - name: akeyless-stores
      namespace: external-secrets
  healthCheckExprs:
    - apiVersion: postgresql.cnpg.io/v1
      kind: Cluster
      failed: status.conditions.filter(e, e.type == 'Ready').all(e, e.status == 'False')
      current: status.conditions.filter(e, e.type == 'Ready').all(e, e.status == 'True')
  postBuild:
    substituteFrom:
      - name: cluster-secrets
        kind: Secret
    substitute:
      # renovate: datasource=docker depName=ghcr.io/cloudnative-pg/postgresql
      POSTGRESQL_VERSION: 17.5-bookworm
      APP: *app
